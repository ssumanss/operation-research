{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to complex analysis course \u00b6 This page is dedicated to the course of operaton research taught at the university department of mathematics, Tilka Manjhi Bhagalpur University, Bhagalpur. Syllabus \u00b6 Simplex Algorithm, Big-M, Two Phase Method Dual Simplex and other algorithm Transportaion and Assignment Problems Game Theory Determinsic and Probabilistic Dynamic Programming Nonlinear Programming KKT Conditions Objectives \u00b6 The course Operation Research focussed on the study of different kinds of optimization methods. First two unit is realted to linear programming and simplex method. Simplex Algorithm Big-M Two Phase Dual Simplex Algorithm Transportation Problem Assignment Problem Game Theory Dynamic Programming Two Persion Zero Sum Game Graphical Solution Game as LPP Nonlinear Programming KKT Conditions References \u00b6 Operation Research by Hamady A. Taha Routine \u00b6 Weekday 1 st Period 2 nd Period 3 rd Period 4 th Period 5 th Period MON CA TUE CA WED CA THR CA FRI CA SAT CA Instructor \u00b6 Sandeep Suman , Assistant Professor, TMBU, Bhagalpur","title":"Home"},{"location":"#welcome-to-complex-analysis-course","text":"This page is dedicated to the course of operaton research taught at the university department of mathematics, Tilka Manjhi Bhagalpur University, Bhagalpur.","title":"Welcome to complex analysis course"},{"location":"#syllabus","text":"Simplex Algorithm, Big-M, Two Phase Method Dual Simplex and other algorithm Transportaion and Assignment Problems Game Theory Determinsic and Probabilistic Dynamic Programming Nonlinear Programming KKT Conditions","title":"Syllabus"},{"location":"#objectives","text":"The course Operation Research focussed on the study of different kinds of optimization methods. First two unit is realted to linear programming and simplex method. Simplex Algorithm Big-M Two Phase Dual Simplex Algorithm Transportation Problem Assignment Problem Game Theory Dynamic Programming Two Persion Zero Sum Game Graphical Solution Game as LPP Nonlinear Programming KKT Conditions","title":"Objectives"},{"location":"#references","text":"Operation Research by Hamady A. Taha","title":"References"},{"location":"#routine","text":"Weekday 1 st Period 2 nd Period 3 rd Period 4 th Period 5 th Period MON CA TUE CA WED CA THR CA FRI CA SAT CA","title":"Routine"},{"location":"#instructor","text":"Sandeep Suman , Assistant Professor, TMBU, Bhagalpur","title":"Instructor"},{"location":"Scipy/","text":"from sympy import init_printing from scipy.optimize import linprog from utility import * init_printing () The main method to solve linear programming problem in python is given by the following command scipy . optimize . linprog ( c , A_ub = None , b_ub = None , A_eq = None , b_eq = None , bounds = None , method = 'revised simplex' , callback = None , options = None , x0 = None ) Where the value of each argument is given by comparing the linear programming with the following linear programn \\begin{alignat*}{2} & \\text{minimize: } && c^T x \\\\ & \\text{subject to: } && \\begin{aligned}[t] A_{ub}x &\\leq b_{ub} \\\\ A_{eq}x &= b_{eq} \\\\ l\\leq x &\\leq u \\end{aligned} \\end{alignat*} c = [ - 1 , 4 ] A = [[ - 3 , 1 ], [ 1 , 2 ]] b = [ 6 , 4 ] x0_bounds = ( None , None ) x1_bounds = ( - 3 , None ) res = linprog ( c , A_ub = A , b_ub = b , bounds = [ x0_bounds , x1_bounds ], method = 'simplex' ) res fun: -22.0 message: 'Optimization terminated successfully.' nit: 1 slack: array([39., 0.]) status: 0 success: True x: array([10., -3.]) Example 1.a \u00b6 Now let's try to solve the following problem from the assignment \\begin{alignat*}{2} & \\text{minimize: } && x_1 - 2x_2 - 4x_3 + 2x_4 \\\\ & \\text{subject to: } && \\begin{aligned}[t] x_1 - 2x_3 &\\leq 4 \\\\ x_2 - x_4 &\\leq 8 \\\\ -2x_1 + x_2 + 8x_3 + x_4 &\\leq 12 \\\\ x_1,x_2,x_3,x_4 &\\geq 0 \\end{aligned} \\end{alignat*} We have to use the following command to solve this problem c = [ 1 , - 2 , - 4 , 2 ] A = [[ 1 , 0 , - 2 , 0 ], [ 0 , 1 , 0 , - 1 ], [ - 2 , 1 , 8 , 1 ]] b = [ 4 , 8 , 12 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ); res fun: -18.0 message: 'Optimization terminated successfully.' nit: 2 slack: array([5., 0., 0.]) status: 0 success: True x: array([0. , 8. , 0.5, 0. ]) We can use a small function to extract the important information and print in a line as follows. fancy_output ( res ) The value of optimal is -18 at (0,8,1/2,0) Example 1.b \u00b6 We can solve the second assignment \\begin{alignat*}{2} & \\text{minimize: } && 2x-y+2z \\\\ & \\text{subject to: } && \\begin{aligned}[t] 2x + y &\\leq 10 \\\\ x+2y-2z &\\leq 20 \\\\ y+2z &\\leq 5 \\\\ x,y,z &\\geq 0 \\end{aligned} \\end{alignat*} c = [ 2 , - 1 , 2 ] A = [[ 2 , 1 , 0 ], [ 1 , 2 , - 2 ], [ 0 , 1 , 2 ]] b = [ 10 , 20 , 5 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res ) The value of optimal is -5 at (0,5,0) Example 1.c \u00b6 We can solve the second assignment \\begin{alignat*}{2} & \\text{maximize: } && x_1 + 2x_2 + 2x_3, \\\\ & \\text{subject to: } && \\begin{aligned}[t] 5x_1 + 2x_2 + 3x_3 &\\leq 15 \\\\ x_1 + 4x_2 + 2x_3 &\\leq 12 \\\\ 2x_1 + x_3 &\\leq 8 \\\\ x_1,x_2,x_3 &\\geq 0 \\end{aligned} \\end{alignat*} # Convert the objective to negative array c = [ - 1 , - 2 , - 2 ] A = [[ 5 , 2 , 3 ], [ 1 , 4 , 2 ], [ 2 , 0 , 1 ]] b = [ 15 , 12 , 8 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res , maximize = True ) The value of optimal is 21/2 at (0,3/4,9/2) Example 2.a \u00b6 We can solve the second assignment \\begin{alignat*}{2} & \\text{maximize: } && 3x_1 - x_2 \\\\ & \\text{subject to: } && \\begin{aligned}[t] 2x_1 + x_2 &\\geq 2 \\\\ x_1 + 3x_2 &\\leq 2 \\\\ x_2 &\\leq 4 \\\\ x_1,x_2 &\\geq 0 \\end{aligned} \\end{alignat*} # Convert the objective to negative array c = [ - 3 , - 1 ] A = [[ - 2 , - 1 ], [ 1 , 3 ], [ 0 , 1 ]] b = [ - 2 , 2 , 4 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res , maximize = True ) The value of optimal is 6 at (2,0) Example 5.a \u00b6 We can solve the second assignment \\begin{alignat*}{2} & \\text{maximize: } && 2x+4y \\\\ & \\text{subject to: } && \\begin{aligned}[t] x + 2y &\\leq 5 \\\\ x + y &\\leq 4 \\\\ x, y &\\geq 0 \\end{aligned} \\end{alignat*} # Convert the objective to negative array c = [ - 2 , - 4 ] A = [[ 1 , 2 ], [ 1 , 1 ]] b = [ 5 , 4 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res , maximize = True ) The value of optimal is 10 at (0,5/2) Example 4 \u00b6 Consider the following linear programming problem \\begin{alignat*}{2} & \\text{maximize: } && 3x+2y \\\\ & \\text{subject to: } && \\begin{aligned}[t] 4x - y &\\leq 4 \\\\ 4x +3y &\\leq 6 \\\\ 4x + y &\\leq 4 \\\\ x, y &\\geq 0 \\end{aligned} \\end{alignat*} c = [ - 3 , - 2 ] A = [[ 4 , - 1 ], [ 4 , 3 ], [ 4 , 1 ]] b = [ 4 , 6 , 4 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res , maximize = True ) The value of optimal is 17/4 at (3/4,1) Example 6.b \u00b6 Show that the following problem has unbounded objective \\begin{alignat*}{2} & \\text{maximize: } && 20x_1 + 5x_2 + x_3 \\\\ & \\text{subject to: } && \\begin{aligned}[t] 3x_1 + 5x_2 - 5x_3 &\\leq 50 \\\\ x_1 + 3x_2 - 4x_3 &\\leq 20 \\\\ x_1 &\\leq 10 \\\\ x_1, x_2, x_3 &\\geq 0 \\end{aligned} \\end{alignat*} c = [ - 20 , - 5 , - 1 ] A = [[ 3 , 5 , - 5 ], [ 1 , 3 , - 4 ], [ 1 , 0 , 0 ]] b = [ 50 , 20 , 10 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) res fun: -232.0 message: 'Optimization failed. The problem appears to be unbounded.' nit: 3 slack: array([0., 0., 0.]) status: 3 success: False x: array([10., 6., 2.]) Example 3.b \u00b6 Consider the following problem, in the phase I, the artificial variable didn't leave but assumes the value 0 , hence we can remove it and continue with phase II \\begin{alignat*}{2} & \\text{maximize: } && 2x_1 + 2x_2 + 4 x_3 \\\\ & \\text{subject to: } && \\begin{aligned}[t] 2x_1 + x_2 + x_3 &\\leq 2 \\\\ 3x_1 + 4x_2 + 2x_3 &\\geq 8 \\\\ x_1, x_2, x_3 &\\geq 0 \\end{aligned} \\end{alignat*} c = [ - 2 , - 2 , - 4 ] A = [ [ 2 , 1 , 1 ], [ - 3 , - 4 , - 2 ] ] b = [ 2 , - 8 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res , maximize = True ) The value of optimal is 4 at (0,2,0)","title":"Scipy"},{"location":"Scipy/#example-1a","text":"Now let's try to solve the following problem from the assignment \\begin{alignat*}{2} & \\text{minimize: } && x_1 - 2x_2 - 4x_3 + 2x_4 \\\\ & \\text{subject to: } && \\begin{aligned}[t] x_1 - 2x_3 &\\leq 4 \\\\ x_2 - x_4 &\\leq 8 \\\\ -2x_1 + x_2 + 8x_3 + x_4 &\\leq 12 \\\\ x_1,x_2,x_3,x_4 &\\geq 0 \\end{aligned} \\end{alignat*} We have to use the following command to solve this problem c = [ 1 , - 2 , - 4 , 2 ] A = [[ 1 , 0 , - 2 , 0 ], [ 0 , 1 , 0 , - 1 ], [ - 2 , 1 , 8 , 1 ]] b = [ 4 , 8 , 12 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ); res fun: -18.0 message: 'Optimization terminated successfully.' nit: 2 slack: array([5., 0., 0.]) status: 0 success: True x: array([0. , 8. , 0.5, 0. ]) We can use a small function to extract the important information and print in a line as follows. fancy_output ( res ) The value of optimal is -18 at (0,8,1/2,0)","title":"Example 1.a"},{"location":"Scipy/#example-1b","text":"We can solve the second assignment \\begin{alignat*}{2} & \\text{minimize: } && 2x-y+2z \\\\ & \\text{subject to: } && \\begin{aligned}[t] 2x + y &\\leq 10 \\\\ x+2y-2z &\\leq 20 \\\\ y+2z &\\leq 5 \\\\ x,y,z &\\geq 0 \\end{aligned} \\end{alignat*} c = [ 2 , - 1 , 2 ] A = [[ 2 , 1 , 0 ], [ 1 , 2 , - 2 ], [ 0 , 1 , 2 ]] b = [ 10 , 20 , 5 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res ) The value of optimal is -5 at (0,5,0)","title":"Example 1.b"},{"location":"Scipy/#example-1c","text":"We can solve the second assignment \\begin{alignat*}{2} & \\text{maximize: } && x_1 + 2x_2 + 2x_3, \\\\ & \\text{subject to: } && \\begin{aligned}[t] 5x_1 + 2x_2 + 3x_3 &\\leq 15 \\\\ x_1 + 4x_2 + 2x_3 &\\leq 12 \\\\ 2x_1 + x_3 &\\leq 8 \\\\ x_1,x_2,x_3 &\\geq 0 \\end{aligned} \\end{alignat*} # Convert the objective to negative array c = [ - 1 , - 2 , - 2 ] A = [[ 5 , 2 , 3 ], [ 1 , 4 , 2 ], [ 2 , 0 , 1 ]] b = [ 15 , 12 , 8 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res , maximize = True ) The value of optimal is 21/2 at (0,3/4,9/2)","title":"Example 1.c"},{"location":"Scipy/#example-2a","text":"We can solve the second assignment \\begin{alignat*}{2} & \\text{maximize: } && 3x_1 - x_2 \\\\ & \\text{subject to: } && \\begin{aligned}[t] 2x_1 + x_2 &\\geq 2 \\\\ x_1 + 3x_2 &\\leq 2 \\\\ x_2 &\\leq 4 \\\\ x_1,x_2 &\\geq 0 \\end{aligned} \\end{alignat*} # Convert the objective to negative array c = [ - 3 , - 1 ] A = [[ - 2 , - 1 ], [ 1 , 3 ], [ 0 , 1 ]] b = [ - 2 , 2 , 4 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res , maximize = True ) The value of optimal is 6 at (2,0)","title":"Example 2.a"},{"location":"Scipy/#example-5a","text":"We can solve the second assignment \\begin{alignat*}{2} & \\text{maximize: } && 2x+4y \\\\ & \\text{subject to: } && \\begin{aligned}[t] x + 2y &\\leq 5 \\\\ x + y &\\leq 4 \\\\ x, y &\\geq 0 \\end{aligned} \\end{alignat*} # Convert the objective to negative array c = [ - 2 , - 4 ] A = [[ 1 , 2 ], [ 1 , 1 ]] b = [ 5 , 4 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res , maximize = True ) The value of optimal is 10 at (0,5/2)","title":"Example 5.a"},{"location":"Scipy/#example-4","text":"Consider the following linear programming problem \\begin{alignat*}{2} & \\text{maximize: } && 3x+2y \\\\ & \\text{subject to: } && \\begin{aligned}[t] 4x - y &\\leq 4 \\\\ 4x +3y &\\leq 6 \\\\ 4x + y &\\leq 4 \\\\ x, y &\\geq 0 \\end{aligned} \\end{alignat*} c = [ - 3 , - 2 ] A = [[ 4 , - 1 ], [ 4 , 3 ], [ 4 , 1 ]] b = [ 4 , 6 , 4 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res , maximize = True ) The value of optimal is 17/4 at (3/4,1)","title":"Example 4"},{"location":"Scipy/#example-6b","text":"Show that the following problem has unbounded objective \\begin{alignat*}{2} & \\text{maximize: } && 20x_1 + 5x_2 + x_3 \\\\ & \\text{subject to: } && \\begin{aligned}[t] 3x_1 + 5x_2 - 5x_3 &\\leq 50 \\\\ x_1 + 3x_2 - 4x_3 &\\leq 20 \\\\ x_1 &\\leq 10 \\\\ x_1, x_2, x_3 &\\geq 0 \\end{aligned} \\end{alignat*} c = [ - 20 , - 5 , - 1 ] A = [[ 3 , 5 , - 5 ], [ 1 , 3 , - 4 ], [ 1 , 0 , 0 ]] b = [ 50 , 20 , 10 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) res fun: -232.0 message: 'Optimization failed. The problem appears to be unbounded.' nit: 3 slack: array([0., 0., 0.]) status: 3 success: False x: array([10., 6., 2.])","title":"Example 6.b"},{"location":"Scipy/#example-3b","text":"Consider the following problem, in the phase I, the artificial variable didn't leave but assumes the value 0 , hence we can remove it and continue with phase II \\begin{alignat*}{2} & \\text{maximize: } && 2x_1 + 2x_2 + 4 x_3 \\\\ & \\text{subject to: } && \\begin{aligned}[t] 2x_1 + x_2 + x_3 &\\leq 2 \\\\ 3x_1 + 4x_2 + 2x_3 &\\geq 8 \\\\ x_1, x_2, x_3 &\\geq 0 \\end{aligned} \\end{alignat*} c = [ - 2 , - 2 , - 4 ] A = [ [ 2 , 1 , 1 ], [ - 3 , - 4 , - 2 ] ] b = [ 2 , - 8 ] res = linprog ( c , A_ub = A , b_ub = b , method = 'simplex' ) fancy_output ( res , maximize = True ) The value of optimal is 4 at (0,2,0)","title":"Example 3.b"},{"location":"assignments/","text":"Assignments \u00b6 As a part of continuous assessment you have to submit the assignment S. No. Donwload Link Due Date 1 Download 15/05/2019 2 3 4 5","title":"Assignments"},{"location":"assignments/#assignments","text":"As a part of continuous assessment you have to submit the assignment S. No. Donwload Link Due Date 1 Download 15/05/2019 2 3 4 5","title":"Assignments"},{"location":"exam/","text":"Exams \u00b6 The course has two exams one is internal of 15 marks, while the other is final worth 70 marks. Rest marks are part of continuous assessment that belongs to attendance, seminar and assignments. Practice the following question for exams Internal Exam \u00b6 Internal exam consist of 5 objectives and 3 descriptive questions, out of which you have to answer all objectives and 2 descriptive questions. Final Exam \u00b6 Final exam divided in three groups. The questions are organized in three groups as follows: Group Questions Marks Total A 10/10 2 20 B 04/05 5 20 C 03/05 10 30","title":"Exam"},{"location":"exam/#exams","text":"The course has two exams one is internal of 15 marks, while the other is final worth 70 marks. Rest marks are part of continuous assessment that belongs to attendance, seminar and assignments. Practice the following question for exams","title":"Exams"},{"location":"exam/#internal-exam","text":"Internal exam consist of 5 objectives and 3 descriptive questions, out of which you have to answer all objectives and 2 descriptive questions.","title":"Internal Exam"},{"location":"exam/#final-exam","text":"Final exam divided in three groups. The questions are organized in three groups as follows: Group Questions Marks Total A 10/10 2 20 B 04/05 5 20 C 03/05 10 30","title":"Final Exam"},{"location":"game-theory/basic-definitions/","text":"Basic Defintions of Game Theory \u00b6 Checkpoint #1: Which of the following situations can be modelled as a game Two student trying to solve an assignment as soon as possible Five students trying to solve their assignment in minimum time A number of students competing for rank 1 None of These Checkpoint #2: Which of the following is not true for a two person zero sum game Sum of their payoff is zero Two teams are playing cricket for fixed amount of money Both players can get non-negative payoff None of these","title":"Definitions"},{"location":"game-theory/basic-definitions/#basic-defintions-of-game-theory","text":"Checkpoint #1: Which of the following situations can be modelled as a game Two student trying to solve an assignment as soon as possible Five students trying to solve their assignment in minimum time A number of students competing for rank 1 None of These Checkpoint #2: Which of the following is not true for a two person zero sum game Sum of their payoff is zero Two teams are playing cricket for fixed amount of money Both players can get non-negative payoff None of these","title":"Basic Defintions of Game Theory"},{"location":"game-theory/dominant-strategy/","text":"Dominant Strategy \u00b6 Checkpoint #1: Which is true for dominant strategy Every game has a dominant strategy If a game has dominant strategy, then the size of game will reduced If a game has dominant strategy for player A, then the only strategy player A will use is the dominant strategy None of these","title":"Dominant Strategy"},{"location":"game-theory/dominant-strategy/#dominant-strategy","text":"Checkpoint #1: Which is true for dominant strategy Every game has a dominant strategy If a game has dominant strategy, then the size of game will reduced If a game has dominant strategy for player A, then the only strategy player A will use is the dominant strategy None of these","title":"Dominant Strategy"},{"location":"game-theory/introduction/","text":"Introduction \u00b6 In this part of this course we will learn some game theory. Game theory is used to model conflicting situation in social and economic activity. In this course we will basically learn a special type of game that is called two person zero sum game .","title":"Introduction"},{"location":"game-theory/introduction/#introduction","text":"In this part of this course we will learn some game theory. Game theory is used to model conflicting situation in social and economic activity. In this course we will basically learn a special type of game that is called two person zero sum game .","title":"Introduction"},{"location":"game-theory/maximin-strategy/","text":"Maximin and Minimax Strategy \u00b6 Checkpoint #1: Which is not true for maximin strategy? In is based on pessimistic thinking, i.e. , thinking about the least risk. If the payoff matrix is given for player A , the maximin strategy is used by player A . If the payoff matrix is given for player A , the maximin strategy is used by player B . Maximin and minimax strategy are based on the same approach by player A and B respectively. Checkpoint #2: If the payoff matrix is given for player A , then which of the following is true for maximin strategy? It gives a lower bount for the game. It gives a upper bound for the game. The maximin strategy is used by player B . None of these.","title":"Maximin Strategy"},{"location":"game-theory/maximin-strategy/#maximin-and-minimax-strategy","text":"Checkpoint #1: Which is not true for maximin strategy? In is based on pessimistic thinking, i.e. , thinking about the least risk. If the payoff matrix is given for player A , the maximin strategy is used by player A . If the payoff matrix is given for player A , the maximin strategy is used by player B . Maximin and minimax strategy are based on the same approach by player A and B respectively. Checkpoint #2: If the payoff matrix is given for player A , then which of the following is true for maximin strategy? It gives a lower bount for the game. It gives a upper bound for the game. The maximin strategy is used by player B . None of these.","title":"Maximin and Minimax Strategy"}]}